#+BRAIN_PARENTS: system
#+TITLE: Supermemo configuration
#+auto_tangle: nil

* sm configuration
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       83033a7a-cd06-47f6-b5fe-f1a867d96844
:END:
#+begin_src elisp
(use-package! sm-emacs)
#+end_src

* TODO Disable save place for mpv when opening from link?
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       318ccf4c-17a8-4cfb-9a38-a65b61b77164
:END:
* TODO search and replace functions
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       8d250aab-b0d6-4bdf-8a91-97c095518161
:END:
** TODO search and replace 尾高 and 平板
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       7b1296c6-058d-4a39-ae28-2f182a4f6400
:END:

- [ ] in org files
- [ ] in sm collection

* TODO Fix SM header colourization
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       871de898-c6c6-4da5-8a64-1aaa062429e0
:END:
* TODO Youtube/org-brain/sm pipeline
:PROPERTIES:
:CREATED:  [2023-01-06 Fri 15:05]
:ID:       b6693be2-60cc-4efc-9a60-e72ee8efc1ea
:END:

Use channel name + year
#+begin_src sh
yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --output '~/Downloads/%(creator)s%(upload_date>%Y)s.%(ext)s'
#+end_src

#+begin_src sh :tangle .config/yt-dlp.config
'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --output '~/Downloads/%(creator)s%(upload_date>%Y)s.%(ext)s'
#+end_src

* sm backups
:PROPERTIES:
:CREATED:  [2021-01-04 Mon 15:52]
:ID:       a04ab1f5-a77b-4dec-8c59-3276246dfb88
:END:

** snapshots
:PROPERTIES:
:CREATED:  [2022-06-28 Tue 08:51]
:ID:       e1e32f73-5885-4c87-aa14-d4a3a03cc58a
:END:

As I am on ~btrfs~ I like to take advantage of its snapshotting capabilities in conjunction with SM. This allows me to target the collection folder at various checkpoints so that I can roll back to named+timed states in case I make a mistake or something goes wrong that damages the collection in someway. Note, however, that snapshots in and of themselves do not constitute backups if they live on the same drive or machine (and exposed to any of the dangers vulnerable systems face), so it is advisable to incrementally send to separate local and remote (offsite) machines (and probably a EDC disk like a USB thumbdrive).

*** Pre and post launch snapshots
:PROPERTIES:
:CREATED:  [2022-06-28 Tue 08:59]
:ID:       7b179be8-5d7a-475b-9c00-46ca4356496e
:END:

The most basic and effective form of snapshotting is pre and post launching SM. This gives us at worst at least a day of rollback if we are closing SM daily for its midnight shift (and more if you close at the end of every learning session like me). These snapshots are special in that they are run *while SuperMemo is off and not touching the collection*.

~btrbk~ has some nice automation of snapshots and we'll be using the following 2 configs:

#+begin_src conf :tangle .config/btrbk/supermemo-btrbk-pre.conf
timestamp_format        long
snapshot_preserve_min   18h
snapshot_preserve       48h

volume /home
subvolume nanjigen/Documents/SM
snapshot_name SM-pre
target /mnt/@snapshots
#+end_src

#+begin_src conf :tangle .config/btrbk/supermemo-btrbk-post.conf
timestamp_format        long
snapshot_preserve_min   18h
snapshot_preserve       48h

volume /home
subvolume nanjigen/Documents/SM
snapshot_name SM-post
target /mnt/@snapshots
#+end_src

The only difference between the two is the naming scheme.

Next we define some functions that call a ~btrbk~ process and set a sentinel, allowing us to execute the snapshots at the desired checkpoints:

#+begin_src elisp :noweb-ref btrk pre-session
(defun nanjigen/sm-snapshot-pre ()
  "take a btrfs pre-session snapshot of the SuperMemo collection"
  (let ((default-directory "/sudo::"))
    (set-process-sentinel
     (start-process
      "btrbk-sm"
      "*btrbk-sm*"
      "btrbk"
      "-c"
      "/home/nanjigen/.config/btrbk/supermemo-btrbk-pre.conf"
      "run"
      "-n")
     (lambda (process event)
       (message "Process: %s had the event '%s'" process event)))))
;; TODO have process-sentinel return a pass or failed message
#+end_src

#+begin_src elisp :noweb-ref btrk post-session
(defun nanjigen/sm-snapshot-pre ()
  "take a btrfs post-session snapshot of the SuperMemo collection"
  (let ((default-directory "/sudo::"))
    (set-process-sentinel
     (start-process
      "btrbk-sm"
      "*btrbk-sm*"
      "btrbk"
      "-c"
      "/home/nanjigen/.config/btrbk/supermemo-btrbk-post.conf"
      "run"
      "-n")
     (lambda (process event)
       (message "Process: %s had the event '%s'" process event)))))
;; TODO have process-sentinel return a pass or failed message
#+end_src

An interesting side-effect of this procedure is that we get 2 back-to-back snapshots of the collection /while it was left alone/, namely the most recent post and current pre - this allows us to check the health

*** TODO Maybe use inotify to take a snapshot after SM writes a file to disk?
:PROPERTIES:
:CREATED:  [2022-12-30 Fri 22:20]
:ID:       cd6e6ff5-2d6f-45c0-924e-cabf4dfff201
:END:
** sm yasnippet
:PROPERTIES:
:CREATED:  [2021-01-04 Mon 15:52]
:ID:       9fd2197d-3730-458d-ad94-c90d7309d355
:END:

#+begin_src yasnippet
# -*- mode: snippet -*-
# name: org-pdftools-sm-reference
# key: pdf-ref
# --

#SuperMemoReference
#Title:
#Author:
#Date: Imported on Dec 28, 2020, 00:00:00
#Source: (org-ref) bibtex?
#Link: pdf:
#Comment:
#Article: 40:
#Concept group: Root: neruon (1: neuron)
#+end_src

* PROJECT Soc questions hydra?
:PROPERTIES:
:CREATED:  [2022-07-07 Thu 08:54]
:ID:       fc14d6fb-ca35-46dd-9df2-17db16e391d9
:END:
** NEXT Brainstorm socq hydra
:PROPERTIES:
:TRIGGER:  chain-find-next(NEXT,from-current,priority-up,effort-down)
:CREATED:  [2022-07-07 Thu 08:54]
:ID:       6438ad26-bb73-48db-850a-d824ea2f97bc
:END:
** TODO Add Socratic questions to system
:PROPERTIES:
:CREATED:  [2022-07-07 Thu 08:54]
:ID:       713819f3-d1f0-43e0-8833-71a03a9d99c1
:END:
http://problemsolving.engin.umich.edu/strategy/cthinking.htm
