"b257e44735432ddbc58b108d6af09b71981a9871"
#s(undo-tree [nil (#3=[nil nil ((1 . 1990) 4985 (#("#!/bin/sh
## This file should be automatically sourced by the login manager or Bash if
## .bash_profile does not exist.  If this file is not automatically sourced,
## do it from the shell config to me sure it applies to TTY as well.

# export EDITOR=/usr/bin/nano
export QT_QPA_PLATFORMTHEME=\"qt5ct\"
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export GTK2_RC_FILES=\"$HOME/.gtkrc-2.0\"

## Mask
## Result for 027 is \"rwxr-x---\".  022 is the popular default.
##
## As a result applications make the bad assumption # that \"others\" have access.
## Another drawback of 027 is that is behaves badly with default sudo config: for
## instance \"sudo mkdir foo\" will effectively create a \"foo\" folder whose owner
## is root and with permission 027, even if root's umask is 022.  This is
## usually very bad.
## See https://wiki.archlinux.org/index.php/Sudo#Permissive_umask.
##
## It is possible to override sudo's umask by adding the following to the
## sudoers file:
##
## Defaults umask = 0022
## Defaults umask_override
# umask 027

## Preliminary path definitions.  For security reasons (and bad programming
## assumptions) you should always append entries to PATH, not prepend them.
appendpath () {
	[ $# -eq 2 ] && PATHVAR=$2 || PATHVAR=PATH
	[ -d \"$1\" ] || return
	eval echo \\$$PATHVAR | grep -q \"\\(:\\|^\\)$1\\(:\\|$\\)\" && return
	eval export $PATHVAR=\"\\$$PATHVAR:$1\"
}
prependpath () {
	[ $# -eq 2 ] && PATHVAR=$2 || PATHVAR=PATH
	[ -d \"$1\" ] || return
	eval echo \\$$PATHVAR | grep -q \"\\(:\\|^\\)$1\\(:\\|$\\)\" && return
	eval export $PATHVAR=\"$1:\\$$PATHVAR\"
}

# ## Last PATH entries.
# appendpath \"${HOME}/.local/bin\"
# command -v pacman >/dev/null 2>&1 && appendpath \"${HOME}/.local/bin/pacman\"

## mcron: needs to be run after PATH is fully set or else local programs could
## be missing.
# if command -v mcron >/dev/null 2>&1; then
# 	# TODO: Only start if not already started?
# 	# pkill mcron
# 	mcron &
# fi

## SSH-Agent
## Set SSH to use gpg-agent
# unset SSH_AGENT_PID
# if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then
#   export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\"
# fi
# Set GPG TTY
# export GPG_TTY=$(tty)
# Refresh gpg-agent tty in case user switches into an X session
# gpg-connect-agent updatestartuptty /bye >/dev/null

## Default text editor
## 'em' is a custom wrapper for emacsclient. See '.bin/em'.
## VISUAL is given priority by some programs like Mutt. This way we can separate
## editors that wait from those that don't.
for i in emacsclient em emacs vim vi nano; do
	command -v $i >/dev/null 2>&1 && export EDITOR=$i && break
done
GIT_EDITOR=\"$EDITOR\"
VISUAL=\"$EDITOR\"
[ \"$GIT_EDITOR\" = em ] && GIT_EDITOR=emc
[ \"$VISUAL\" = em ] && VISUAL=emw
export GIT_EDITOR
export VISUAL

## Linux specific
if [ \"$(uname -o)\" = \"GNU/Linux\" ] ; then
	## Startup error log.
	## dmesg
	log_dmesg=\"$(dmesg | grep -i error)\"
	[ -n \"$log_dmesg\" ] && echo \"$log_dmesg\" > \"$HOME/errors-dmesg.log\" || rm \"$HOME/errors-dmesg.log\" 2>/dev/null
	## systemd
	if command -v systemctl >/dev/null 2>&1; then
		count=\"$(systemctl show | awk -F= '$1==\"NFailedUnits\" {print $2; exit}')\"
		if [ $count -ne 0 ]; then
			systemctl -l --failed > \"$HOME/errors-systemd.log\"
		else
			rm -f \"$HOME/errors-systemd.log\"
		fi
	fi

## Remove less history.
# LESSHISTFILE='-'

## Manpage.
# export MANPAGER=\"less -s\"
# export MANWIDTH=80

## Time display (with ls command for example).  GNU 'ls' only.
export TIME_STYLE=+\"|%Y-%m-%d %H:%M:%S|\"

## Guix
## WARNING: GUIX_PACKAGE_PATH is deprecated in favor of channels.
# if command -v guix >/dev/null 2>&1; then
# 	export GUIX_PACKAGE_PATH=\"$HOME/.guix-packages\"
# fi


## $HOME software install
## See http://nullprogram.com/blog/2017/06/19/.
## The variables should not contain paths to non-existing folders as it may
## break compilers.
# prependpath \"$HOME/.local/include\" C_INCLUDE_PATH
# prependpath \"$HOME/.local/include\" CPLUS_INCLUDE_PATH
# prependpath \"$HOME/.local/lib\" LIBRARY_PATH
# prependpath \"$HOME/.local/lib/pkgconfig\" PKG_CONFIG_PATH
# prependpath \"$HOME/.local/share/info\" INFOPATH
# prependpath \"$HOME/.local/share/man\" MANPATH
## If you install a library in your home directory that is also installed on the
## system, and then run a system program, it may be linked against your library
## rather than the library installed on the system as was originally
## intended. This could have detrimental effects.
# export LD_LIBRARY_PATH=$HOME/.local/lib

## Hook. Should be sourced last
# [ -f ~/.profile_hook ] && . ~/.profile_hook
## Hook example
#
# export CPPFLAGS=-I$HOME/local/usr/include
# export LDFLAGS=-L$HOME/local/usr/lib
#
# appendpath \"$HOME/local/usr/lib/python2.7/dist-packages/\" PYTHONPATH
# export LUA_CPATH=\"$HOME/local/usr/lib/lib?.so;$(lua -e \"print(package.cpath)\")\"
#
# umask 077

## End: Source .bashrc. The rc file should guard against non-interactive shells.
[ \"$(ps -o comm= $$)\" != bash ] && return
[ -f ~/.bashrc ] && . ~/.bashrc

[ -z \"$DISPLAY\" ] && [ \"$(tty)\" = '/dev/tty1' ] && exec xinit -- vt01
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 7 (fontified t face font-lock-comment-face) 7 9 (fontified t face font-lock-keyword-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-delimiter-face) 11 12 (syntax-table #1=(3) fontified t face font-lock-comment-delimiter-face) 12 13 (fontified t face font-lock-comment-delimiter-face) 13 87 (fontified t face font-lock-comment-face) 87 88 (fontified t face font-lock-comment-delimiter-face) 88 89 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 89 90 (fontified t face font-lock-comment-delimiter-face) 90 164 (fontified t face font-lock-comment-face) 164 165 (fontified t face font-lock-comment-delimiter-face) 165 166 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 166 167 (fontified t face font-lock-comment-delimiter-face) 167 233 (fontified t face font-lock-comment-face) 233 234 (fontified t) 234 236 (fontified t face font-lock-comment-delimiter-face) 236 264 (fontified t face font-lock-comment-face) 264 270 (fontified t face font-lock-builtin-face) 270 271 (fontified t) 271 291 (fontified t face font-lock-variable-name-face) 291 292 (fontified t) 292 299 (fontified t face font-lock-string-face) 299 300 (fontified t) 300 306 (fontified t face font-lock-builtin-face) 306 307 (fontified t) 307 334 (fontified t face font-lock-variable-name-face) 334 335 (fontified t) 335 336 (fontified t face highlight-numbers-number) 336 337 (fontified t) 337 343 (fontified t face font-lock-builtin-face) 343 344 (fontified t) 344 357 (fontified t face font-lock-variable-name-face) 357 358 (fontified t) 358 359 (fontified t face font-lock-string-face) 359 360 (fontified t face (font-lock-constant-face font-lock-string-face)) 360 364 (fontified t face (font-lock-variable-name-face font-lock-string-face)) 364 376 (fontified t face font-lock-string-face) 376 378 (fontified t) 378 379 (fontified t face font-lock-comment-delimiter-face) 379 380 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 380 381 (fontified t face font-lock-comment-delimiter-face) 381 386 (fontified t face font-lock-comment-face) 386 387 (fontified t face font-lock-comment-delimiter-face) 387 388 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 388 389 (fontified t face font-lock-comment-delimiter-face) 389 449 (fontified t face font-lock-comment-face) 449 450 (fontified t face font-lock-comment-delimiter-face) 450 451 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 451 452 (fontified t face font-lock-comment-face) 452 453 (fontified t face font-lock-comment-delimiter-face) 453 454 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 454 455 (fontified t face font-lock-comment-delimiter-face) 455 480 (fontified t face font-lock-comment-face) 480 484 (fontified t face (font-lock-comment-face font-lock-type-face)) 484 500 (fontified t face font-lock-comment-face) 500 533 (fontified t face font-lock-comment-face) 533 534 (fontified t face font-lock-comment-delimiter-face) 534 535 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 535 536 (fontified t face font-lock-comment-delimiter-face) 536 598 (fontified t face font-lock-comment-face) 598 602 (fontified t face (font-lock-comment-face font-lock-type-face)) 602 615 (fontified t face font-lock-comment-face) 615 616 (fontified t face font-lock-comment-delimiter-face) 616 617 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 617 618 (fontified t face font-lock-comment-delimiter-face) 618 628 (fontified t face font-lock-comment-face) 628 632 (fontified t face (font-lock-comment-face font-lock-type-face)) 632 633 (fontified t face font-lock-comment-face) 633 638 (fontified t face (font-lock-comment-face font-lock-type-face)) 638 695 (fontified t face font-lock-comment-face) 695 696 (fontified t face font-lock-comment-delimiter-face) 696 697 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 697 698 (fontified t face font-lock-comment-delimiter-face) 698 769 (fontified t face font-lock-comment-face) 769 770 (fontified t face font-lock-comment-delimiter-face) 770 771 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 771 772 (fontified t face font-lock-comment-delimiter-face) 772 790 (fontified t face font-lock-comment-face) 790 791 (fontified t face font-lock-comment-delimiter-face) 791 792 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 792 793 (fontified t face font-lock-comment-delimiter-face) 793 838 (fontified t face font-lock-comment-face) 838 839 (syntax-table #1# fontified t face font-lock-comment-face) 839 857 (fontified t face font-lock-comment-face) 857 858 (fontified t face font-lock-comment-delimiter-face) 858 859 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 859 860 (fontified t face font-lock-comment-face) 860 861 (fontified t face font-lock-comment-delimiter-face) 861 862 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 862 863 (fontified t face font-lock-comment-delimiter-face) 863 890 (fontified t face font-lock-comment-face) 890 894 (fontified t face (font-lock-comment-face font-lock-type-face)) 894 934 (fontified t face font-lock-comment-face) 934 935 (fontified t face font-lock-comment-delimiter-face) 935 936 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 936 937 (fontified t face font-lock-comment-delimiter-face) 937 951 (fontified t face font-lock-comment-face) 951 952 (fontified t face font-lock-comment-delimiter-face) 952 953 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 953 954 (fontified t face font-lock-comment-face) 954 955 (fontified t face font-lock-comment-delimiter-face) 955 956 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 956 957 (fontified t face font-lock-comment-delimiter-face) 957 979 (fontified t face font-lock-comment-face) 979 980 (fontified t face font-lock-comment-delimiter-face) 980 981 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 981 982 (fontified t face font-lock-comment-delimiter-face) 982 1006 (fontified t face font-lock-comment-face) 1006 1008 (fontified t face font-lock-comment-delimiter-face) 1008 1018 (fontified t face font-lock-comment-face) 1018 1019 (fontified t) 1019 1020 (fontified t face font-lock-comment-delimiter-face) 1020 1021 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1021 1022 (fontified t face font-lock-comment-delimiter-face) 1022 1033 (fontified t face font-lock-comment-face) 1033 1095 (fontified t face font-lock-comment-face) 1095 1096 (fontified nil) 1096 1097 (syntax-table #1# fontified nil) 1097 1191 (fontified nil) 1191 1192 (syntax-table #1# fontified nil) 1192 1378 (fontified nil) 1378 1379 (syntax-table #1# fontified nil) 1379 1548 (fontified nil) 1548 1549 (syntax-table #1# fontified nil) 1549 1683 (fontified nil) 1683 1684 (syntax-table #1# fontified nil) 1684 1762 (fontified nil) 1762 1763 (syntax-table #1# fontified nil) 1763 1901 (fontified nil) 1901 1902 (syntax-table #1# fontified nil) 1902 1914 (fontified nil) 1914 1915 (syntax-table #1# fontified nil) 1915 2245 (fontified nil) 2245 2246 (syntax-table #1# fontified nil) 2246 2268 (fontified nil) 2268 2269 (syntax-table #1# fontified nil) 2269 2328 (fontified nil) 2328 2329 (syntax-table #1# fontified nil) 2329 2409 (fontified nil) 2409 2410 (syntax-table #1# fontified nil) 2410 2709 (fontified nil) 2709 2710 (syntax-table #1# fontified nil) 2710 2770 (fontified nil) 2770 2771 (syntax-table #1# fontified nil) 2771 2793 (fontified nil) 2793 2794 (syntax-table #1# fontified nil) 2794 2953 (fontified nil) 2953 2954 (syntax-table #1# fontified nil) 2954 3051 (fontified nil) 3051 3052 (syntax-table #2=(1) fontified nil) 3052 3064 (fontified nil) 3064 3065 (syntax-table #2# fontified nil) 3065 3222 (fontified nil) 3222 3223 (syntax-table #1# fontified nil) 3223 3266 (fontified nil) 3266 3267 (syntax-table #1# fontified nil) 3267 3328 (fontified nil) 3328 3329 (syntax-table #1# fontified nil) 3329 3433 (fontified nil) 3433 3434 (syntax-table #1# fontified nil) 3434 3441 (fontified nil) 3441 3442 (syntax-table #1# fontified nil) 3442 3608 (fontified nil) 3608 3609 (syntax-table #1# fontified nil) 3609 3634 (fontified nil) 3634 3635 (syntax-table #1# fontified nil) 3635 3682 (fontified nil) 3682 3683 (syntax-table #1# fontified nil) 3683 3758 (fontified nil) 3758 3759 (syntax-table #1# fontified nil) 3759 4086 (fontified nil) 4086 4087 (fontified t face font-lock-comment-delimiter-face) 4087 4088 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4088 4089 (fontified t face font-lock-comment-delimiter-face) 4089 4167 (fontified t face font-lock-comment-face) 4167 4168 (fontified t face font-lock-comment-delimiter-face) 4168 4169 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4169 4170 (fontified t face font-lock-comment-delimiter-face) 4170 4247 (fontified t face font-lock-comment-face) 4247 4248 (fontified t face font-lock-comment-delimiter-face) 4248 4249 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4249 4250 (fontified t face font-lock-comment-delimiter-face) 4250 4316 (fontified t face font-lock-comment-face) 4316 4317 (fontified t face font-lock-comment-delimiter-face) 4317 4318 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4318 4319 (fontified t face font-lock-comment-delimiter-face) 4319 4366 (fontified t face font-lock-comment-face) 4366 4368 (fontified t face font-lock-comment-delimiter-face) 4368 4408 (fontified t face font-lock-comment-face) 4408 4409 (fontified t) 4409 4410 (fontified t face font-lock-comment-delimiter-face) 4410 4411 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4411 4412 (fontified t face font-lock-comment-delimiter-face) 4412 4441 (fontified t face font-lock-comment-face) 4441 4443 (fontified t face font-lock-comment-delimiter-face) 4443 4487 (fontified t face font-lock-comment-face) 4487 4488 (fontified t face font-lock-comment-delimiter-face) 4488 4489 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4489 4490 (fontified t face font-lock-comment-delimiter-face) 4490 4503 (fontified t face font-lock-comment-face) 4503 4504 (fontified t face font-lock-comment-delimiter-face) 4504 4505 (fontified t face font-lock-comment-face) 4505 4507 (fontified t face font-lock-comment-delimiter-face) 4507 4549 (fontified t face font-lock-comment-face) 4549 4551 (fontified t face font-lock-comment-delimiter-face) 4551 4586 (fontified t face font-lock-comment-face) 4586 4588 (fontified t face font-lock-comment-face) 4588 4589 (fontified t face font-lock-comment-delimiter-face) 4589 4590 (fontified t face font-lock-comment-face) 4590 4592 (fontified t face font-lock-comment-delimiter-face) 4592 4661 (fontified t face font-lock-comment-face) 4661 4663 (fontified t face font-lock-comment-delimiter-face) 4663 4743 (fontified t face font-lock-comment-face) 4743 4744 (fontified t face font-lock-comment-delimiter-face) 4744 4745 (fontified t face font-lock-comment-face) 4745 4747 (fontified t face font-lock-comment-delimiter-face) 4747 4757 (fontified t face font-lock-comment-face) 4757 4758 (fontified t) 4758 4759 (fontified t face font-lock-comment-delimiter-face) 4759 4760 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 4760 4761 (fontified t face font-lock-comment-delimiter-face) 4761 4839 (fontified t face font-lock-comment-face) 4839 4840 (fontified t face (rainbow-delimiters-depth-1-face)) 4840 4841 (fontified t) 4841 4842 (fontified t face font-lock-string-face) 4842 4859 (fontified t face (sh-quoted-exec font-lock-string-face)) 4859 4860 (fontified t face font-lock-string-face) 4860 4869 (fontified t) 4869 4870 (fontified t face (rainbow-delimiters-depth-1-face)) 4870 4874 (fontified t) 4874 4880 (fontified t face font-lock-keyword-face) 4880 4881 (fontified t) 4881 4882 (fontified t face (rainbow-delimiters-depth-1-face)) 4882 4896 (fontified t) 4896 4897 (fontified t face (rainbow-delimiters-depth-1-face)) 4897 4914 (fontified t) 4914 4915 (fontified t face (rainbow-delimiters-depth-1-face)) 4915 4919 (fontified t) 4919 4920 (fontified t face font-lock-string-face) 4920 4921 (fontified t face (font-lock-constant-face font-lock-string-face)) 4921 4928 (fontified t face (font-lock-variable-name-face font-lock-string-face)) 4928 4929 (fontified t face font-lock-string-face) 4929 4930 (fontified t) 4930 4931 (fontified t face (rainbow-delimiters-depth-1-face)) 4931 4935 (fontified t) 4935 4936 (fontified t face (rainbow-delimiters-depth-1-face)) 4936 4937 (fontified t) 4937 4938 (fontified t face font-lock-string-face) 4938 4944 (fontified t face (sh-quoted-exec font-lock-string-face)) 4944 4945 (fontified t face font-lock-string-face) 4945 4948 (fontified t) 4948 4959 (fontified t face font-lock-string-face) 4959 4960 (fontified t) 4960 4961 (fontified t face (rainbow-delimiters-depth-1-face)) 4961 4965 (fontified t) 4965 4969 (fontified t face font-lock-keyword-face) 4969 4984 (fontified t)) . 1) (undo-tree-id0 . -4984) (undo-tree-id1 . -4984) (undo-tree-id2 . -4086) (undo-tree-id3 . -4983) (undo-tree-id4 . -4984) (undo-tree-id5 . -4984) (undo-tree-id6 . -4984) (undo-tree-id7 . -4984) 4985 (t 24885 45494 792686 487000)) nil (24885 53353 904574 546000) 0 nil]) nil nil (24885 45496 144031 510000) 0 nil] #3# 5088 1 nil)